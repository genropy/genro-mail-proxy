[storage]
# SQLite database path used by the service.
# During local development /tmp is fine, but in production (especially under Docker)
# mount a persistent volume and update this value so queues and logs survive restarts.
db_path = /tmp/mail_service.db
[server]
# host = 0.0.0.0
# port = 8000
# api_token = your-api-token
[client]
# Endpoint invoked by the dispatcher to deliver batched reports
# Updated to use example_client port (9090)
client_sync_url = http://127.0.0.1:8081/email/mailproxy/mp_endpoint/proxy_sync
client_sync_user = syncuser
client_sync_password = syncpass

# client_sync_token = mytoken  # use this instead of user/password when available

[scheduler]
# Global on/off switch for the mail dispatcher
active = true

[delivery]
# Polling interval (in seconds) for the SMTP send loop.
send_interval_seconds = 0.5
# Enable test mode to run dispatcher/reporting loops only when triggered by "run now".
test_mode = false
# Default priority for queued messages (0=immediate, 1=high, 2=medium, 3=low).
default_priority = 2
# Retention window (in seconds) for messages already reported to the client.
delivery_report_retention_seconds = 604800
# Maximum number of messages to send per SMTP account per dispatch cycle.
# This prevents overwhelming SMTP servers and helps avoid rate limiting/blacklisting.
# Each account can override this with its own batch_size setting.
batch_size_per_account = 50

[imap]
# IMAP receiving configuration
enabled = false
# Polling interval (in seconds) for checking new emails in IMAP accounts.
poll_interval_seconds = 60

# Attachment storage configuration
# S3 bucket for temporary attachment storage (required for container environments)
s3_bucket =
s3_region = eu-west-1
s3_access_key =
s3_secret_key =
# Optional: custom S3 endpoint for MinIO or S3-compatible services
s3_endpoint_url =
# Optional: prefix for S3 keys (e.g., "mail-attachments/")
s3_path_prefix = received/

# Inline encoding for small attachments (in bytes). Files smaller than this
# will be base64-encoded directly in the sync payload instead of uploaded to S3.
attachment_inline_max_size = 524288

# Retention for temporary data (in seconds)
message_retention_seconds = 300
attachment_retention_seconds = 600

[bounce_detection]
# Enable automatic bounce detection for incoming messages
enabled = false
# Retention period (in seconds) for bounce reports after they've been synced
# Default is 7 days (604800 seconds)
retention_seconds = 604800

[logging]
# When true, each SMTP attempt and client sync exchange is logged to the console.
delivery_activity = true
